  name: "编译"
  on:
    push:
      tags:
        - '*'
  permissions:
    contents: write
  jobs:
    changelog:
      runs-on: ubuntu-latest
      steps:
        - name: "✏️ Generate release changelog"
          uses: heinrichreimer/action-github-changelog-generator@v2.3
          with:
            token: ${{ secrets.GITHUB_TOKEN }}
    windows-amd64:
      name: "compile for win-amd64"
      runs-on:
        - windows-latest
      needs: changelog
      steps:
        - name: "Checkout"
          uses: actions/checkout@v4
          with:
            fetch-depth: 0
        - name: "Setup go"
          uses: actions/setup-go@v5
          with:
            go-version: '>=1.23'
            check-latest: true
        - name: "vendor"
          run: |
            mkdir vendor
            go mod vendor
            go mod tidy
        - name: "Build windows"
          run: |
            go build -ldflags='-s -w' -o target/trc_amd64.exe
          env:
            GOOS: windows
            GOARCH: amd64
            GO111MODULE: on
            CGO_ENABLED: 0
        - name: publish release
          uses: softprops/action-gh-release@v2
          if: startsWith(github.ref, 'refs/tags/v')
          with:
            body: ${{needs.changelog.output.changelog}}
            make_latest: true
            draft: false
            prerelease: false
            fail_on_unmatched_files: true
            files: |
              target/trc_amd64.exe
    windows-arm64:
      name: "compile for win-arm64"
      runs-on:
        - windows-latest
      needs: changelog
      steps:
        - name: "Checkout"
          uses: actions/checkout@v4
          with:
            fetch-depth: 0
        - name: "Setup go"
          uses: actions/setup-go@v4
          with:
            go-version: '>=1.23'
            check-latest: true
        - name: "vendor"
          run: |
            mkdir vendor
            go mod vendor
            go mod tidy
        - name: "Build windows"
          run: |
            go build -ldflags='-s -w' -o target/trc_arm64.exe
          env:
            GOOS: windows
            GOARCH: arm64
            GO111MODULE: on
            CGO_ENABLED: 0
        - name: publish release
          uses: softprops/action-gh-release@v2
          if: startsWith(github.ref, 'refs/tags/v')
          with:
            body: ${{needs.changelog.output.changelog}}
            make_latest: true
            draft: false
            prerelease: false
            fail_on_unmatched_files: true
            files: |
              target/trc_arm64.exe
    linux-amd64:
      name: "compile for linux-amd64"
      runs-on:
        - ubuntu-latest
      needs: changelog
      steps:
        - name: "Checkout"
          uses: actions/checkout@v4
          with:
            fetch-depth: 0
        - name: "Setup go"
          uses: actions/setup-go@v5
          with:
            go-version: '>=1.23'
            check-latest: true
        - name: "vendor"
          run: |
            mkdir -p vendor
            go mod vendor
            go mod tidy
        - name: "Build linux"
          run: |
            go build -ldflags='-s -w' -o target/trc_linux_amd64
          env:
            GOOS: linux
            GOARCH: amd64
            GO111MODULE: on
            CGO_ENABLED: 0
        - name: publish release
          uses: softprops/action-gh-release@v2
          if: startsWith(github.ref, 'refs/tags/v')
          with:
            body: ${{needs.changelog.output.changelog}}
            make_latest: true
            draft: false
            prerelease: false
            fail_on_unmatched_files: true
            files: |
              target/trc_linux_amd64
    linux-arm64:
      name: "compile for linux-arm64"
      runs-on:
        - ubuntu-latest
      needs: changelog
      steps:
        - name: "Checkout"
          uses: actions/checkout@v4
          with:
            fetch-depth: 0
        - name: "Setup go"
          uses: actions/setup-go@v5
          with:
            go-version: '>=1.23'
            check-latest: true
        - name: "vendor"
          run: |
            mkdir -p vendor
            go mod vendor
            go mod tidy
        - name: "Build linux"
          run: |
            go build -ldflags='-s -w' -o target/trc_linux_arm64
          env:
            GOOS: linux
            GOARCH: arm64
            GO111MODULE: on
            CGO_ENABLED: 0
        - name: publish release
          uses: softprops/action-gh-release@v2
          if: startsWith(github.ref, 'refs/tags/v')
          with:
            body: ${{needs.changelog.output.changelog}}
            make_latest: true
            draft: false
            prerelease: false
            fail_on_unmatched_files: true
            files: |
              target/trc_linux_arm64
    linux-loong64:
      name: "compile for linux-loong64"
      runs-on:
        - ubuntu-latest
      needs: changelog
      steps:
        - name: "Checkout"
          uses: actions/checkout@v4
          with:
            fetch-depth: 0
        - name: "Setup go"
          uses: actions/setup-go@v5
          with:
            go-version: '>=1.23'
            check-latest: true
        - name: "vendor"
          run: |
            mkdir -p vendor
            go mod vendor
            go mod tidy
        - name: "Build linux"
          run: |
            go build -ldflags='-s -w' -o target/trc_linux_loong64
          env:
            GOOS: linux
            GOARCH: loong64
            GO111MODULE: on
            CGO_ENABLED: 0
        - name: publish release
          uses: softprops/action-gh-release@v2
          if: startsWith(github.ref, 'refs/tags/v')
          with:
            body: ${{needs.changelog.output.changelog}}
            make_latest: true
            draft: false
            prerelease: false
            fail_on_unmatched_files: true
            files: |
              target/trc_linux_loong64
    macos-arm64:
      name: "compile for macos-arm64"
      runs-on:
        - macos-latest
      needs: changelog
      steps:
        - name: "Checkout"
          uses: actions/checkout@v4
          with:
            fetch-depth: 0
        - name: "Setup go"
          uses: actions/setup-go@v5
          with:
            go-version: '>=1.23'
            check-latest: true
        - name: "vendor"
          run: |
            mkdir -p vendor
            go mod vendor
            go mod tidy
        - name: "Build macos"
          run: |
            go build -ldflags='-s -w' -o target/trc_darwin_arm64
          env:
            GOOS: darwin
            GOARCH: arm64
            GO111MODULE: on
            CGO_ENABLED: 0

        - name: publish release
          uses: softprops/action-gh-release@v2
          if: startsWith(github.ref, 'refs/tags/v')
          with:
            body: ${{needs.changelog.output.changelog}}
            make_latest: true
            draft: false
            prerelease: false
            fail_on_unmatched_files: true
            files: |
              target/trc_darwin_arm64
    macos-amd64:
      name: "compile for macos-amd64"
      runs-on:
        - macos-latest
      needs: changelog
      steps:
        - name: "Checkout"
          uses: actions/checkout@v4
          with:
            fetch-depth: 0
        - name: "Setup go"
          uses: actions/setup-go@v5
          with:
            go-version: '>=1.23'
            check-latest: true
        - name: "vendor"
          run: |
            mkdir -p vendor
            go mod vendor
            go mod tidy
        - name: "Build macos"
          run: |
            go build -ldflags='-s -w' -o target/trc_darwin_amd64
          env:
            GOOS: darwin
            GOARCH: amd64
            GO111MODULE: on
            CGO_ENABLED: 0
        - name: publish release
          uses: softprops/action-gh-release@v2
          if: startsWith(github.ref, 'refs/tags/v')
          with:
            body: ${{needs.changelog.output.changelog}}
            make_latest: true
            draft: false
            prerelease: false
            fail_on_unmatched_files: true
            files: |
              target/trc_darwin_amd64